{"version":3,"file":"logger.cjs.production.min.js","sources":["../src/formatters/jsx.ts","../src/formatters/components/Path.tsx","../src/formatters/components/Tree.tsx","../src/formatters/components/TreeItem.tsx","../src/formatters/components/Preview.tsx","../src/formatters/selectionFormatter.tsx","../src/formatters/accessorFormatter.tsx","../src/formatters/proxyFormatter.tsx","../src/loadFormatters.ts","../src/Logger.ts"],"sourcesContent":["// @ts-ignore\nimport { string } from 'to-style'\n\nconst JSX_ELEMENT = Symbol('JSX_ELEMENT')\n\nexport function createElement(\n  element: string | Function,\n  props: any,\n  ...children: any\n) {\n  if (typeof element === 'function') {\n    children[JSX_ELEMENT] = true\n\n    return element({ ...props, children })\n  }\n\n  if (props && props.style) {\n    props.style = string(props.style)\n  }\n\n  if (Array.isArray(children) && children[0] && children[0][JSX_ELEMENT]) {\n    ;[children] = children\n  }\n\n  return [\n    element,\n    props,\n    ...children\n      .map((child: any) =>\n        Array.isArray(child) && !child.find(e => !Array.isArray(e))\n          ? child\n          : [child]\n      )\n      .flat()\n      .filter(Boolean),\n  ]\n}\n","import * as React from '../jsx'\n\nexport function Path<T extends { node: any }>({\n  path,\n  isRoot,\n  isFragment,\n  objectDepth,\n}: {\n  path: T[]\n  objectDepth: number\n  isRoot?(element: T): boolean\n  isFragment?(element: T): boolean\n}) {\n  return (\n    <span>\n      {path.map((element, i) => {\n        const fragment = isFragment && isFragment(element)\n        const root = isRoot && isRoot(element)\n\n        return (\n          <span>\n            {fragment &&\n              (objectDepth ? (\n                <span>...</span>\n              ) : (\n                <span style={{ color: 'rgb(154, 127, 213)' }}>\n                  fragment{path.length === 1 ? ' ' : '['}\n                </span>\n              ))}\n\n            <span\n              style={{\n                color: fragment\n                  ? '#5db0d7'\n                  : objectDepth\n                  ? '#E36EEC'\n                  : root\n                  ? '#03A9F4'\n                  : '#D2C057',\n                fontWeight: root && !objectDepth ? 'bold' : 'normal',\n              }}\n            >\n              {element.toString()}\n            </span>\n\n            {fragment && (\n              <span style={{ color: 'rgb(154, 127, 213)' }}>\n                <span>\n                  {' '}\n                  on{' '}\n                  <span style={{ color: '#E36EEC' }}>\n                    {String(element.node)}\n                  </span>\n                </span>\n\n                {path.length !== 1 && !objectDepth && <span>]</span>}\n              </span>\n            )}\n\n            {i !== path.length - 1 && <span style={{ opacity: 0.8 }}>.</span>}\n          </span>\n        )\n      })}\n    </span>\n  )\n}\n","import * as React from '../jsx'\n\nexport const Tree = ({ children }: { children: any }) => (\n  <ol\n    style={{\n      listStyleType: 'none',\n      padding: 0,\n      margin: '0 0 0 12px',\n      fontStyle: 'normal',\n    }}\n  >\n    {children}\n  </ol>\n)\n","import * as React from '../jsx'\n\nexport const TreeItem = ({\n  root,\n  object,\n  objectDepth,\n}: {\n  root: boolean\n  object: any\n  objectDepth: number\n}) => (\n  <li\n    style={{\n      marginLeft: !root ? '14px' : 0,\n    }}\n  >\n    {/*\n    // @ts-ignore */}\n    <object object={object} config={{ objectDepth }} />\n  </li>\n)\n","import * as React from '../jsx'\n\nexport function Preview<T extends any>({\n  elements,\n  colon,\n  objectDepth,\n  isFragment,\n}: {\n  elements: T[]\n  objectDepth: number\n  colon?: boolean\n  isFragment?: (element: T) => boolean\n}) {\n  return (\n    <span style={{ fontStyle: objectDepth ? 'normal' : 'italic' }}>\n      {colon && objectDepth && `:`}\n\n      {` {`}\n      {elements.map((element, i) => (\n        <span>\n          <span style={{ opacity: 0.7 }}>\n            {isFragment && isFragment(element) ? <span>...</span> : null}\n            {element.toString().replace(/\\(.+$/, `(â€¦)`)}\n          </span>\n\n          {i !== elements.length - 1 && <span>, </span>}\n        </span>\n      ))}\n      {`}`}\n    </span>\n  )\n}\n","import { Selection, Fragment } from 'gqless'\n\nimport { Path, Preview, Tree, TreeItem } from './components'\nimport * as React from './jsx'\n\n// TODO\nexport const selectionFormatter = {\n  header(selection: any, config: any = {}) {\n    try {\n      if (!(selection instanceof Selection)) return null\n\n      const { selections } = selection\n      return (\n        <div>\n          <Path\n            path={[selection]}\n            objectDepth={config.objectDepth}\n            isRoot={selection => selection.constructor === Selection}\n            isFragment={selection => selection instanceof Fragment}\n          />\n          {selections.size && (\n            <Preview\n              elements={Array.from(selections)}\n              objectDepth={config.objectDepth}\n              isFragment={s => s instanceof Fragment}\n            />\n          )}\n        </div>\n      )\n    } catch {\n      return null\n    }\n  },\n\n  body(selection: Selection, config: any = {}) {\n    const selections = Array.from(selection.selections)\n    selections.sort(\n      (a, b) => +(b instanceof Fragment) - +(a instanceof Fragment)\n    )\n\n    return (\n      <Tree>\n        {selections.map(selection => (\n          <TreeItem\n            object={selection}\n            root={!!selection.selections.size}\n            objectDepth={(config.objectDepth || 0) + 1}\n          />\n        ))}\n      </Tree>\n    )\n  },\n\n  hasBody(selection: Selection) {\n    return !!selection.selections.size\n  },\n}\n","import { Accessor, RootAccessor, ScalarNode, FragmentAccessor } from 'gqless'\n\nimport { Path, Preview, Tree, TreeItem } from './components'\nimport * as React from './jsx'\n\nexport const accessorFormatter = {\n  header(accessor: any, config: any = {}) {\n    try {\n      if (!(accessor instanceof Accessor)) return null\n\n      const path = config.objectDepth\n        ? accessor.path.slice(config.objectDepth)\n        : accessor.path\n\n      const { children } = accessor\n      return (\n        <div>\n          <Path\n            path={path}\n            objectDepth={config.objectDepth}\n            isRoot={accessor => accessor instanceof RootAccessor}\n            isFragment={accessor => accessor instanceof FragmentAccessor}\n          />\n\n          {children.length ? (\n            <Preview\n              elements={children}\n              objectDepth={config.objectDepth}\n              colon={!(accessor instanceof FragmentAccessor)}\n              isFragment={accessor => accessor instanceof FragmentAccessor}\n            />\n          ) : (\n            (config.objectDepth || accessor.node instanceof ScalarNode) && (\n              <span>\n                {`: `}\n                <object\n                  // @ts-ignore\n                  object={accessor.value ? accessor.value.toJSON() : null}\n                />\n              </span>\n            )\n          )}\n        </div>\n      )\n    } catch {\n      return null\n    }\n  },\n\n  body(accessor: Accessor) {\n    const children = [...accessor.children]\n    children.sort(\n      (a, b) =>\n        +(b instanceof FragmentAccessor) - +(a instanceof FragmentAccessor)\n    )\n\n    return (\n      <Tree>\n        {children.map(accessor => (\n          <TreeItem\n            object={accessor}\n            root={!!accessor.children.length}\n            objectDepth={accessor.path.length - 1}\n          />\n        ))}\n      </Tree>\n    )\n  },\n  hasBody(accessor: Accessor) {\n    return !!accessor.children.length\n  },\n}\n","import { ACCESSOR } from 'gqless'\n\nimport * as React from './jsx'\n\n// TODO: Should instead read cache, instead of accessor children. Why: missing properties\nexport const proxyFormatter = {\n  header(proxy: any) {\n    try {\n      if (!proxy || !proxy[ACCESSOR]) return null\n\n      // @ts-ignore\n      return <object object={proxy[ACCESSOR]} />\n    } catch {\n      return null\n    }\n  },\n\n  hasBody() {\n    return false\n  },\n}\n","import * as formatters from './formatters'\n\nif (typeof window !== 'undefined') {\n  if (!(window as any).devtoolsFormatters)\n    (window as any).devtoolsFormatters = []\n\n    // Inject\n  ;(window as any).devtoolsFormatters.push(\n    ...Object.values(formatters).filter(f => typeof f === 'object')\n  )\n}\n","import './loadFormatters'\nimport { parse, stringify } from 'flatted'\nimport { Client, QueryResponse, Plugin, PluginMethod } from 'gqless'\n\nconst format = (...parts: any[][]) => {\n  const texts: string[] = []\n  const styles: string[] = []\n  for (const [text, style] of parts.filter(Boolean)) {\n    texts.push(text)\n    styles.push(`font-weight: normal; ${style}`)\n  }\n\n  return [`%c${texts.join('%c')}`, ...styles]\n}\n\nexport class Logger implements Plugin {\n  constructor(protected client: Client, private verbose = false) {\n    this.client.plugins.add(this)\n  }\n\n  public onCommit = (({ stacks, stackQueries, queries, accessors }) => {\n    if (!this.verbose) return\n\n    console.groupCollapsed(\n      ...format(\n        ['GraphQL ', 'color: gray'],\n        ['fetching ', 'color: darkgrey'],\n        [queries.size, 'color: hsl(252, 100%, 75%)'],\n        [` quer${queries.size === 1 ? 'y' : 'ies'}`, 'color: darkgrey']\n      )\n    )\n\n    const obj = {} as any\n\n    accessors.forEach((accessor, idx) => {\n      obj[accessor.path.toString()] = {\n        Stack: `[${stacks[idx].join(', ')}]`,\n        'Chosen query': stackQueries[idx].toString(),\n      }\n    })\n\n    console.table(obj)\n\n    console.groupEnd()\n  }) as PluginMethod<'onCommit'>\n\n  public onFetch = (async (\n    accessors,\n    responsePromise,\n    variables,\n    query,\n    queryName\n  ) => {\n    const start = Date.now()\n\n    let response: QueryResponse | undefined = undefined\n    let error: any = undefined\n    try {\n      response = await responsePromise\n    } catch (e) {\n      error = e\n    }\n\n    const time = Date.now() - start\n\n    console.groupCollapsed(\n      ...format(\n        ['GraphQL ', 'color: gray'],\n        ['query ', `color: ${error ? 'red' : '#03A9F4'}; font-weight: bold`],\n        [\n          `${queryName ? queryName : '(unnamed)'} `,\n          'font-weight: bold; color: inherit',\n        ],\n\n        [`(${time}ms)`, 'color: gray'],\n        [` ${accessors.length} accessors`, 'color: gray'],\n\n        error && [\n          'FAILED',\n          'margin-left: 10px; border-radius: 2px; padding: 2px 6px; background: #e84343; color: white',\n        ]\n      )\n    )\n\n    const headerStyles = `font-weight: bold; color: #f316c1`\n\n    // Query\n    console.group(\n      ...format(\n        ['Query ', headerStyles],\n        ['  ', `background-image: url(https://graphql.org/img/logo.svg)`]\n      )\n    )\n    if (variables)\n      console.log(...format(['Variables', 'color: #25e1e1']), variables)\n\n    console.log(...format([query, 'color: gray']))\n    console.groupEnd()\n\n    // Result\n    if (error) {\n      console.error(error)\n    } else {\n      console.log(...format(['Result', headerStyles]), response)\n    }\n\n    // Accessors\n    console.groupCollapsed(...format(['Accessors', headerStyles]))\n    for (const accessor of accessors) {\n      console.log(accessor)\n    }\n    console.groupEnd()\n\n    // Cache\n    console.log(\n      ...format(['Cache snapshot', headerStyles]),\n      parse(stringify(this.client.cache))\n    )\n\n    console.groupEnd()\n  }) as PluginMethod<'onFetch'>\n}\n"],"names":["JSX_ELEMENT","Symbol","createElement","element","props","children","style","string","Array","isArray","map","child","find","e","flat","filter","Boolean","Path","path","isRoot","isFragment","objectDepth","React","i","fragment","root","color","length","fontWeight","toString","String","node","opacity","Tree","listStyleType","padding","margin","fontStyle","TreeItem","object","marginLeft","config","Preview","elements","colon","replace","header","selection","Selection","selections","constructor","Fragment","size","from","s","body","sort","a","b","hasBody","accessor","Accessor","slice","RootAccessor","FragmentAccessor","ScalarNode","value","toJSON","proxy","ACCESSOR","window","devtoolsFormatters","push","Object","values","formatters","f","format","parts","texts","styles","text","join","client","verbose","stacks","stackQueries","queries","accessors","this","console","groupCollapsed","obj","forEach","idx","Stack","table","groupEnd","async","responsePromise","variables","query","queryName","start","Date","now","response","undefined","error","time","headerStyles","group","log","parse","stringify","cache","plugins","add"],"mappings":"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"}