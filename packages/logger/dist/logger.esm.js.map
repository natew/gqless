{"version":3,"file":"logger.esm.js","sources":["../src/formatters/jsx.ts","../src/formatters/components/Path.tsx","../src/formatters/components/Tree.tsx","../src/formatters/components/TreeItem.tsx","../src/formatters/components/Preview.tsx","../src/formatters/selectionFormatter.tsx","../src/formatters/accessorFormatter.tsx","../src/formatters/proxyFormatter.tsx","../src/loadFormatters.ts","../src/Logger.ts"],"sourcesContent":["// @ts-ignore\nimport { string } from 'to-style'\n\nconst JSX_ELEMENT = Symbol('JSX_ELEMENT')\n\nexport function createElement(\n  element: string | Function,\n  props: any,\n  ...children: any\n) {\n  if (typeof element === 'function') {\n    children[JSX_ELEMENT] = true\n\n    return element({ ...props, children })\n  }\n\n  if (props && props.style) {\n    props.style = string(props.style)\n  }\n\n  if (Array.isArray(children) && children[0] && children[0][JSX_ELEMENT]) {\n    ;[children] = children\n  }\n\n  return [\n    element,\n    props,\n    ...children\n      .map((child: any) =>\n        Array.isArray(child) && !child.find(e => !Array.isArray(e))\n          ? child\n          : [child]\n      )\n      .flat()\n      .filter(Boolean),\n  ]\n}\n","import * as React from '../jsx'\n\nexport function Path<T extends { node: any }>({\n  path,\n  isRoot,\n  isFragment,\n  objectDepth,\n}: {\n  path: T[]\n  objectDepth: number\n  isRoot?(element: T): boolean\n  isFragment?(element: T): boolean\n}) {\n  return (\n    <span>\n      {path.map((element, i) => {\n        const fragment = isFragment && isFragment(element)\n        const root = isRoot && isRoot(element)\n\n        return (\n          <span>\n            {fragment &&\n              (objectDepth ? (\n                <span>...</span>\n              ) : (\n                <span style={{ color: 'rgb(154, 127, 213)' }}>\n                  fragment{path.length === 1 ? ' ' : '['}\n                </span>\n              ))}\n\n            <span\n              style={{\n                color: fragment\n                  ? '#5db0d7'\n                  : objectDepth\n                  ? '#E36EEC'\n                  : root\n                  ? '#03A9F4'\n                  : '#D2C057',\n                fontWeight: root && !objectDepth ? 'bold' : 'normal',\n              }}\n            >\n              {element.toString()}\n            </span>\n\n            {fragment && (\n              <span style={{ color: 'rgb(154, 127, 213)' }}>\n                <span>\n                  {' '}\n                  on{' '}\n                  <span style={{ color: '#E36EEC' }}>\n                    {String(element.node)}\n                  </span>\n                </span>\n\n                {path.length !== 1 && !objectDepth && <span>]</span>}\n              </span>\n            )}\n\n            {i !== path.length - 1 && <span style={{ opacity: 0.8 }}>.</span>}\n          </span>\n        )\n      })}\n    </span>\n  )\n}\n","import * as React from '../jsx'\n\nexport const Tree = ({ children }: { children: any }) => (\n  <ol\n    style={{\n      listStyleType: 'none',\n      padding: 0,\n      margin: '0 0 0 12px',\n      fontStyle: 'normal',\n    }}\n  >\n    {children}\n  </ol>\n)\n","import * as React from '../jsx'\n\nexport const TreeItem = ({\n  root,\n  object,\n  objectDepth,\n}: {\n  root: boolean\n  object: any\n  objectDepth: number\n}) => (\n  <li\n    style={{\n      marginLeft: !root ? '14px' : 0,\n    }}\n  >\n    {/*\n    // @ts-ignore */}\n    <object object={object} config={{ objectDepth }} />\n  </li>\n)\n","import * as React from '../jsx'\n\nexport function Preview<T extends any>({\n  elements,\n  colon,\n  objectDepth,\n  isFragment,\n}: {\n  elements: T[]\n  objectDepth: number\n  colon?: boolean\n  isFragment?: (element: T) => boolean\n}) {\n  return (\n    <span style={{ fontStyle: objectDepth ? 'normal' : 'italic' }}>\n      {colon && objectDepth && `:`}\n\n      {` {`}\n      {elements.map((element, i) => (\n        <span>\n          <span style={{ opacity: 0.7 }}>\n            {isFragment && isFragment(element) ? <span>...</span> : null}\n            {element.toString().replace(/\\(.+$/, `(â€¦)`)}\n          </span>\n\n          {i !== elements.length - 1 && <span>, </span>}\n        </span>\n      ))}\n      {`}`}\n    </span>\n  )\n}\n","import { Selection, Fragment } from 'gqless'\n\nimport { Path, Preview, Tree, TreeItem } from './components'\nimport * as React from './jsx'\n\n// TODO\nexport const selectionFormatter = {\n  header(selection: any, config: any = {}) {\n    try {\n      if (!(selection instanceof Selection)) return null\n\n      const { selections } = selection\n      return (\n        <div>\n          <Path\n            path={[selection]}\n            objectDepth={config.objectDepth}\n            isRoot={selection => selection.constructor === Selection}\n            isFragment={selection => selection instanceof Fragment}\n          />\n          {selections.size && (\n            <Preview\n              elements={Array.from(selections)}\n              objectDepth={config.objectDepth}\n              isFragment={s => s instanceof Fragment}\n            />\n          )}\n        </div>\n      )\n    } catch {\n      return null\n    }\n  },\n\n  body(selection: Selection, config: any = {}) {\n    const selections = Array.from(selection.selections)\n    selections.sort(\n      (a, b) => +(b instanceof Fragment) - +(a instanceof Fragment)\n    )\n\n    return (\n      <Tree>\n        {selections.map(selection => (\n          <TreeItem\n            object={selection}\n            root={!!selection.selections.size}\n            objectDepth={(config.objectDepth || 0) + 1}\n          />\n        ))}\n      </Tree>\n    )\n  },\n\n  hasBody(selection: Selection) {\n    return !!selection.selections.size\n  },\n}\n","import { Accessor, RootAccessor, ScalarNode, FragmentAccessor } from 'gqless'\n\nimport { Path, Preview, Tree, TreeItem } from './components'\nimport * as React from './jsx'\n\nexport const accessorFormatter = {\n  header(accessor: any, config: any = {}) {\n    try {\n      if (!(accessor instanceof Accessor)) return null\n\n      const path = config.objectDepth\n        ? accessor.path.slice(config.objectDepth)\n        : accessor.path\n\n      const { children } = accessor\n      return (\n        <div>\n          <Path\n            path={path}\n            objectDepth={config.objectDepth}\n            isRoot={accessor => accessor instanceof RootAccessor}\n            isFragment={accessor => accessor instanceof FragmentAccessor}\n          />\n\n          {children.length ? (\n            <Preview\n              elements={children}\n              objectDepth={config.objectDepth}\n              colon={!(accessor instanceof FragmentAccessor)}\n              isFragment={accessor => accessor instanceof FragmentAccessor}\n            />\n          ) : (\n            (config.objectDepth || accessor.node instanceof ScalarNode) && (\n              <span>\n                {`: `}\n                <object\n                  // @ts-ignore\n                  object={accessor.value ? accessor.value.toJSON() : null}\n                />\n              </span>\n            )\n          )}\n        </div>\n      )\n    } catch {\n      return null\n    }\n  },\n\n  body(accessor: Accessor) {\n    const children = [...accessor.children]\n    children.sort(\n      (a, b) =>\n        +(b instanceof FragmentAccessor) - +(a instanceof FragmentAccessor)\n    )\n\n    return (\n      <Tree>\n        {children.map(accessor => (\n          <TreeItem\n            object={accessor}\n            root={!!accessor.children.length}\n            objectDepth={accessor.path.length - 1}\n          />\n        ))}\n      </Tree>\n    )\n  },\n  hasBody(accessor: Accessor) {\n    return !!accessor.children.length\n  },\n}\n","import { ACCESSOR } from 'gqless'\n\nimport * as React from './jsx'\n\n// TODO: Should instead read cache, instead of accessor children. Why: missing properties\nexport const proxyFormatter = {\n  header(proxy: any) {\n    try {\n      if (!proxy || !proxy[ACCESSOR]) return null\n\n      // @ts-ignore\n      return <object object={proxy[ACCESSOR]} />\n    } catch {\n      return null\n    }\n  },\n\n  hasBody() {\n    return false\n  },\n}\n","import * as formatters from './formatters'\n\nif (typeof window !== 'undefined') {\n  if (!(window as any).devtoolsFormatters)\n    (window as any).devtoolsFormatters = []\n\n    // Inject\n  ;(window as any).devtoolsFormatters.push(\n    ...Object.values(formatters).filter(f => typeof f === 'object')\n  )\n}\n","import './loadFormatters'\nimport { parse, stringify } from 'flatted'\nimport { Client, QueryResponse, Plugin, PluginMethod } from 'gqless'\n\nconst format = (...parts: any[][]) => {\n  const texts: string[] = []\n  const styles: string[] = []\n  for (const [text, style] of parts.filter(Boolean)) {\n    texts.push(text)\n    styles.push(`font-weight: normal; ${style}`)\n  }\n\n  return [`%c${texts.join('%c')}`, ...styles]\n}\n\nexport class Logger implements Plugin {\n  constructor(protected client: Client, private verbose = false) {\n    this.client.plugins.add(this)\n  }\n\n  public onCommit = (({ stacks, stackQueries, queries, accessors }) => {\n    if (!this.verbose) return\n\n    console.groupCollapsed(\n      ...format(\n        ['GraphQL ', 'color: gray'],\n        ['fetching ', 'color: darkgrey'],\n        [queries.size, 'color: hsl(252, 100%, 75%)'],\n        [` quer${queries.size === 1 ? 'y' : 'ies'}`, 'color: darkgrey']\n      )\n    )\n\n    const obj = {} as any\n\n    accessors.forEach((accessor, idx) => {\n      obj[accessor.path.toString()] = {\n        Stack: `[${stacks[idx].join(', ')}]`,\n        'Chosen query': stackQueries[idx].toString(),\n      }\n    })\n\n    console.table(obj)\n\n    console.groupEnd()\n  }) as PluginMethod<'onCommit'>\n\n  public onFetch = (async (\n    accessors,\n    responsePromise,\n    variables,\n    query,\n    queryName\n  ) => {\n    const start = Date.now()\n\n    let response: QueryResponse | undefined = undefined\n    let error: any = undefined\n    try {\n      response = await responsePromise\n    } catch (e) {\n      error = e\n    }\n\n    const time = Date.now() - start\n\n    console.groupCollapsed(\n      ...format(\n        ['GraphQL ', 'color: gray'],\n        ['query ', `color: ${error ? 'red' : '#03A9F4'}; font-weight: bold`],\n        [\n          `${queryName ? queryName : '(unnamed)'} `,\n          'font-weight: bold; color: inherit',\n        ],\n\n        [`(${time}ms)`, 'color: gray'],\n        [` ${accessors.length} accessors`, 'color: gray'],\n\n        error && [\n          'FAILED',\n          'margin-left: 10px; border-radius: 2px; padding: 2px 6px; background: #e84343; color: white',\n        ]\n      )\n    )\n\n    const headerStyles = `font-weight: bold; color: #f316c1`\n\n    // Query\n    console.group(\n      ...format(\n        ['Query ', headerStyles],\n        ['  ', `background-image: url(https://graphql.org/img/logo.svg)`]\n      )\n    )\n    if (variables)\n      console.log(...format(['Variables', 'color: #25e1e1']), variables)\n\n    console.log(...format([query, 'color: gray']))\n    console.groupEnd()\n\n    // Result\n    if (error) {\n      console.error(error)\n    } else {\n      console.log(...format(['Result', headerStyles]), response)\n    }\n\n    // Accessors\n    console.groupCollapsed(...format(['Accessors', headerStyles]))\n    for (const accessor of accessors) {\n      console.log(accessor)\n    }\n    console.groupEnd()\n\n    // Cache\n    console.log(\n      ...format(['Cache snapshot', headerStyles]),\n      parse(stringify(this.client.cache))\n    )\n\n    console.groupEnd()\n  }) as PluginMethod<'onFetch'>\n}\n"],"names":["JSX_ELEMENT","Symbol","createElement","element","props","children","style","string","Array","isArray","map","child","find","e","flat","filter","Boolean","Path","path","isRoot","isFragment","objectDepth","React","i","fragment","root","color","length","fontWeight","toString","String","node","opacity","Tree","listStyleType","padding","margin","fontStyle","TreeItem","object","marginLeft","config","Preview","elements","colon","replace","selectionFormatter","header","selection","Selection","selections","constructor","Fragment","size","from","s","body","sort","a","b","hasBody","accessorFormatter","accessor","Accessor","slice","RootAccessor","FragmentAccessor","ScalarNode","value","toJSON","proxyFormatter","proxy","ACCESSOR","window","devtoolsFormatters","push","Object","values","formatters","f","format","parts","texts","styles","text","join","Logger","client","verbose","stacks","stackQueries","queries","accessors","console","groupCollapsed","obj","forEach","idx","Stack","table","groupEnd","responsePromise","variables","query","queryName","start","Date","now","response","undefined","error","time","headerStyles","group","log","parse","stringify","cache","plugins","add"],"mappings":"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"}